<?php// Copyright (c) 2012 Rubén Domínguez//  // This file is part of phpPMS.//// phpPMS is free software: you can redistribute it and/or modify// it under the terms of the GNU General Public License as published by// the Free Software Foundation, either version 3 of the License, or// (at your option) any later version.//// phpPMS is distributed in the hope that it will be useful,// but WITHOUT ANY WARRANTY; without even the implied warranty of// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the// GNU General Public License for more details.//// You should have received a copy of the GNU General Public License// along with Foobar.  If not, see <http://www.gnu.org/licenses/>./** * * @author nuxsmin * @version 0.91b * @link http://www.cygnux.org/phppms *  */    define('PMS_ROOT', '.');    include_once (PMS_ROOT."/inc/includes.php");    check_session(FALSE,TRUE);        function checkLogin(){        $strUserLogin = $_POST["user"];        $strUserPass = $_POST["pass"];        $strMPass = $_POST["mpass"];        $resXML = array( "status" => 0, "description" => "");        $objUsers = new Users;        if ( ! $strUserLogin OR ! $strUserPass ){            $resXML["status"] = 1;            $resXML["description"] = "Usuario/Clave no introducidos";        } elseif( $objUsers->authUserLDAP($strUserLogin, $strUserPass) ){ // Autentificamos por LDAP                        if ( $objUsers->checkUserLDAP($strUserLogin) ){ // Verificamos si el usuario existe en la BBDD                                if ( ! $objUsers->getUserInfo($strUserLogin) ){ // Obtenemos los datos del usuario                    $resXML["status"] = 1;                    $resXML["description"] = "Error interno";                    Common::wrLogInfo("Inicio sesión (LDAP)", "Error al obtener los datos del usuario de la BBDD (1)");                    return $resXML;				                }                                if ( ! $objUsers->updateUserLDAP() ){ // Actualizamos la clave del usuario en MySQL                    $resXML["status"] = 1;                    $resXML["description"] = "Error interno";                    Common::wrLogInfo("Inicio sesión (LDAP)", "Error al actualizar la clave del usuario en la BBDD");                    return $resXML;				                }				                                if ( $objUsers->checkUserMPass($strUserPass) == 0 && ! $strMPass ){ // Comprobamos la clave maestra del usuario                    $resXML["status"] = 3;                    $resXML["description"] = "La clave maestra no ha sido guardada o es incorrecta";                    return $resXML;                } elseif ( $strMPass ) {                    if ( ! $objUsers->updateUserMPass($strMPass,$strUserPass) ){                        $resXML["status"] = 4;                        $resXML["description"] = "Clave maestra incorrecta";                        return $resXML;                    }                }                                 if ( $objUsers->getUserMPass($strUserPass) ){ // Obtenemos la clave maestra del usuario                    $objUsers->setUserSession(); // Establecemos las variables de sesión                    Common::wrLogInfo("Inicio sesión (LDAP)", "Nombre:".$_SESSION['uname'].";Perfil:".$_SESSION['uprofile'].";Grupo:".$_SESSION['ugroup'].";IP:".$_SERVER['REMOTE_ADDR']);                    // Combrobamos si el usuario pertenece al grupo 99 para enviar un correo de activación                    if ( $objUsers->arrUserInfo['intUGroupFid'] == 99 ){                        Common::sendEmail("Usuario: ".$objUsers->arrUserInfo['vacUName']." (".$objUsers->arrUserInfo['vacULogin']."), pendiente de activación");                    }                    $resXML["status"] = 0;                    $resXML["description"] = "index.php";                }            } else {                if ( ! $objUsers->newUserLDAP() ){ // Creamos el usuario de LDAP en MySQL                    $resXML["status"] = 1;                    $resXML["description"] = "Error interno";                    Common::wrLogInfo("Inicio sesión (LDAP)", "Error al guardar los datos de LDAP");                    return $resXML;                }                                if ( ! $objUsers->getUserInfo($strUserLogin) ){ // Obtenemos los datos del nuevo usuario creado                    $resXML["status"] = 1;                    $resXML["description"] = "Error interno";                    Common::wrLogInfo("Inicio sesión (LDAP)", "Error al obtener los datos del usuario de la BBDD (2)");                    return $resXML;				                }				                                if ( $objUsers->checkUserMPass($strUserPass) == 0 && ! $strMPass ){ // Comprobamos la clave maestra del usuario                    $resXML["status"] = 3;                    $resXML["description"] = "La clave maestra no ha sido guardada o es incorrecta";                    return $resXML;                } elseif ( $strMPass ) {                    if ( ! $objUsers->updateUserMPass($strMPass,$strUserPass) ){                        $resXML["status"] = 4;                        $resXML["description"] = "Clave maestra incorrecta";                        return $resXML;                    }                    $resXML["status"] = 5;                    $resXML["description"] = "Clave maestra actualizada correctamente";                }                                 if ( $objUsers->getUserMPass($strUserPass) ){ // Obtenemos la clave maestra del usuario                    $objUsers->setUserSession(); // Establecemos las variables de sesión                    // Combrobamos si el usuario pertenece al grupo 99 para enviar un correo de activación                    if ( $objUsers->arrUserInfo['intUGroupFid'] == 99 ){                        Common::sendEmail("Usuario: ".$objUsers->arrUserInfo['vacUName']." (".$objUsers->arrUserInfo['vacULogin']."), pendiente de activación");                    }                }            }        } else {            $resPass = $objUsers->checkUserPass($strUserLogin,$strUserPass);                        if ( $resPass == 1 ){ // Autentificamos con la BBDD                if ( ! $objUsers->getUserInfo($strUserLogin) ){ // Obtenemos los datos del usuario                    $resXML["status"] = 1;                    $resXML["description"] = "Error interno";                    Common::wrLogInfo("Inicio sesión (MySQL)", "Error al obtener los datos del usuario de la BBDD (3)");                    return $resXML;				                }                                if ( $objUsers->checkUserMPass($strUserPass) == 0 && ! $strMPass ){ // Comprobamos la clave maestra del usuario                    $resXML["status"] = 3;                    $resXML["description"] = "La clave maestra no ha sido guardada o es incorrecta";                    return $resXML;                } elseif ( $strMPass ) {                    if ( ! $objUsers->updateUserMPass($strMPass,$strUserPass) ){                        $resXML["status"] = 4;                        $resXML["description"] = "Clave maestra incorrecta";                        return $resXML;                    }                    $resXML["status"] = 5;                    $resXML["description"] = "Clave maestra actualizada correctamente";                }                                 if ( $objUsers->getUserMPass($strUserPass) ){ // Obtenemos la clave maestra del usuario                    $objUsers->setUserSession(); // Establecemos las variables de sesión                    Common::wrLogInfo("Inicio sesión (MySQL)", "Nombre:".$_SESSION['uname'].";Perfil:".$_SESSION['uprofile'].";Grupo:".$_SESSION['ugroup'].";IP:".$_SERVER['REMOTE_ADDR']);                    // Combrobamos si el usuario pertenece al grupo 99 para enviar un correo de activación                    if ( $objUsers->arrUserInfo['intUGroupFid'] == 99 ){                        Common::sendEmail("Usuario: ".$objUsers->arrUserInfo['vacUName']." (".$objUsers->arrUserInfo['vacULogin']."), pendiente de activación");                    }                    // Devolvemos que se está accediendo mediante MySQL                    $resXML["status"] = 2;                    $resXML["description"] = "Servidor LDAP no disponible";                }            } elseif ( $resPass == 2 ){ // Verificamos que el usuario esté activo                Common::wrLogInfo("Usuario deshabilitado", "Usuario: ".$strUserLogin.";IP:".$_SERVER['REMOTE_ADDR']);                $resXML["status"] = 1;                $resXML["description"] = "Usuario deshabilitado";            } else {                Common::wrLogInfo("Login incorrecto", "Usuario: ".$strUserLogin.";IP:".$_SERVER['REMOTE_ADDR']);                $resXML["status"] = 1;                $resXML["description"] = "Usuario/Clave incorrectos";            }        }        return $resXML;    }    if ( $_POST["login"] ) Common::printXML(checkLogin());?>